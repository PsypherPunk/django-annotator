name: Bump version and release to PyPI

on:
  push:
    branches:
      - 'main'

jobs:
  bump-version:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    name: "Bump version with Commitizen"
    outputs:
      version: ${{ steps.cz.outputs.version }}
    steps:

      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: "${{ secrets.GH_TOKEN }}"
      
      - name: Install Commitizen
        run: |
          python3 -m pip install commitizen==3.28.0
      
      - name: Validate commits
        if: github.ref != 'refs/heads/main'
        run: |
          cz check --rev-range origin/main..

          echo "prerelease=--prerelease=rc" >>"${GITHUB_ENV}"
          echo "devrelease=--devrelease=${GITHUB_RUN_NUMBER}" >>"${GITHUB_ENV}"
      
      - id: cz
        name: Bump version
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'

          cz --name cz_customize bump --check-consistency --yes ${prerelease} ${devrelease}

          echo "version=$(cz version --project)" >> ${GITHUB_OUTPUT}
      
      - name: Push commit
        run: |
          REMOTE_REPO="https://${GITHUB_ACTOR}:${{ secrets.GH_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git push "${REMOTE_REPO}" "HEAD:${GITHUB_REF#refs/heads/}" --tags

      - name: Print version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"

  build:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ needs.bump-version.outputs.version }}

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - uses: abatilo/actions-poetry@v4
      with:
        poetry-version: 'latest'

    - run: poetry build

    - uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/

  pypi-publish:
    name: Upload release to PyPI
    needs: [bump-version, build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/django-annotator
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ needs.bump-version.outputs.version }}

    - uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: ./dist

    - uses: pypa/gh-action-pypi-publish@release/v1
